base_path: "."

components:
  terraform:
    # Can also be set using `ATMOS_COMPONENTS_TERRAFORM_BASE_PATH` ENV var, or `--terraform-dir` command-line argument
    # Supports both absolute and relative paths
    base_path: "components/terraform"
    # Can also be set using `ATMOS_COMPONENTS_TERRAFORM_APPLY_AUTO_APPROVE` ENV var
    apply_auto_approve: false
    # Can also be set using `ATMOS_COMPONENTS_TERRAFORM_DEPLOY_RUN_INIT` ENV var, or `--deploy-run-init` command-line argument
    deploy_run_init: true
    # Can also be set using `ATMOS_COMPONENTS_TERRAFORM_INIT_RUN_RECONFIGURE` ENV var, or `--init-run-reconfigure` command-line argument
    init_run_reconfigure: true
    # Can also be set using `ATMOS_COMPONENTS_TERRAFORM_AUTO_GENERATE_BACKEND_FILE` ENV var, or `--auto-generate-backend-file` command-line argument
    auto_generate_backend_file: true

stacks:
  # Can also be set using `ATMOS_STACKS_BASE_PATH` ENV var, or `--config-dir` and `--stacks-dir` command-line arguments
  # Supports both absolute and relative paths
  base_path: "stacks"
  name_pattern: "{tenant}-{stage}-{environment}"
  included_paths:
    - "./*"

workflows:
  # Can also be set using `ATMOS_WORKFLOWS_BASE_PATH` ENV var, or `--workflows-dir` command-line arguments
  # Supports both absolute and relative paths
  base_path: "stacks/workflows"

logs:
  verbose: true
  colors: true

commands:
  - name: tflint
    description: Execute 'tflint' commands
    commands:
      - name: check
        description: This command executes 'tflint' on terraform components
        arguments:
          - name: component
            description: Name of the component
        steps:
          - echo "::group::{{ .Arguments.component }}"
          - tflint --chdir components/terraform/{{ .Arguments.component }}
          - echo "::group::{{ .Arguments.component }}"
  - name: tfsec
    description: Execute 'tflint' commands
    commands:
      - name: check
        description: This command executes 'tfsec' on terraform components
        arguments:
          - name: component
            description: Name of the component
        steps:
          - echo "::group::{{ .Arguments.component }}"
          - tfsec --exclude-downloaded-modules --no-module-downloads --exclude-path .terraform components/terraform/{{ .Arguments.component }}
          - echo "::endgroup::"
  - name: terraform-ci
    description: Execute 'tflint' commands
    commands:
      - name: fmt
        description: This command executes 'terraform' on terraform components
        arguments:
          - name: component
            description: Name of the component
        steps:
          - echo "::group::{{ .Arguments.component }}"
          - terraform -chdir=components/terraform/{{ .Arguments.component }} init
          - terraform -chdir=components/terraform/{{ .Arguments.component }} fmt -check
          - echo "::endgroup::"
      - name: validate
        description: This command executes 'terraform' on terraform components
        arguments:
          - name: component
            description: Name of the component
        steps:
          - echo "::group::{{ .Arguments.component }}"
          - terraform -chdir=components/terraform/{{ .Arguments.component }} init
          - terraform -chdir=components/terraform/{{ .Arguments.component }} validate
          - echo "::endgroup::"
